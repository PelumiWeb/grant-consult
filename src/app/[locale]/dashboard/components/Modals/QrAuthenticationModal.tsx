import CustomButton from "@/app/[locale]/components/CustomButton";
import LabelInput from "@/app/[locale]/components/LabelInput";
import CustomModal from "@/app/[locale]/components/Modal";
import React, { FC } from "react";
import { useAppDispatch, useAppSelector } from "../../../../../../lib/hooks";
import {
  closeModal,
  openModal,
} from "../../../../../../lib/features/Modal/modalSlice";
import { Input, QRCode } from "antd";
import { OTPProps } from "antd/es/input/OTP";
import { modalName } from "@/app/[locale]/utils/types/ModalTypes";
// import { CopyToClipboard } from "react-copy-to-clipboard";

type Props = {};

// const TypedCopyToClipboard: any = CopyToClipboard;
const QrAuthentication = (props: Props) => {
  const open = useAppSelector((state) => state.modal.open);
  const dispatch = useAppDispatch();
  const [showCode, setShowCode] = React.useState(false);
  const onChange: OTPProps["onChange"] = (text) => {
    console.log("onChange:", text);
  };

  const sharedProps: OTPProps = {
    onChange,
  };
  // console.log(open)
  const openMmodal = () => {
    if (open) {
      dispatch(closeModal());
    }
  };
  return (
    <CustomModal
      open={open}
      setOpen={() => openMmodal()}
      width="540px"
      height="">
      <div className="w-full h-full ">
        <div
          className="flex cursor-pointer items-center"
          onClick={() => {
            dispatch(
              openModal({
                open: true,
                modalType: modalName.twoStepVerification,
              })
            );
          }}>
          <img src="/goBack.svg" alt="" />
          <p className="ml-1 text-sm">Back</p>
        </div>

        <div className="px-4 mt-4">
          <p className="font-semibold text-[24px] leading-[32px] text-primary">
            Add authenticator app
          </p>
          <div>
            <p className="text-[#191C1D] font-semibold text-[16px] leading-[24px] mt-4">
              Step 1: Scan this QR code
            </p>
            <p className="text-[#747778] font-normal text-sm">
              Scan the following QR code with your authenticator app, such as
              Google Authenticator, Duo Mobile, Authy, etc.
            </p>
          </div>

          <div className="w-full flex items-center justify-center border-b border-b-borderColor py-8 flex-col">
            {showCode ? (
              <QRCode value="hey" />
            ) : (
              <div>
                <div className="w-full py-2 bg-[#191C1D0F] mb-4">
                  <p className="text-sm text-[#191C1D] p-4">
                    HDOEIDAOMCICSALDIVOVLAODIDC932DJSLDKLDNCCCCSD
                  </p>
                </div>

                {/* <TypedCopyToClipboard
                  text={"Copy to Clickboard"}
                  // onCopy={() => this.setState({ copied: true })}
                > */}
                  <CustomButton
                    title="Copy"
                    radius="rounded-[10px]"
                    backgrounColor="bg-transparent"
                    width="w-full"
                    borderColor="border-borderColor"
                    textStyle="text-textColor"
                  />
                {/* </TypedCopyToClipboard> */}
              </div>
            )}
            <button onClick={() => setShowCode((prev) => !prev)}>
              {showCode ? (
                <p className="text-secondaryColor text-sm text-center py-2">
                  Canâ€™t scan the QR code?
                </p>
              ) : (
                <p className="text-secondaryColor text-sm text-center py-2">
                  Want to scan QR code?
                </p>
              )}
            </button>
          </div>
        </div>

        <div className="mt-8 px-4">
          <p className="text-[#191C1D] font-semibold text-[16px] leading-[24px] mt-4">
            Step 2: Enter the one-time code
          </p>
          <p className="text-[#747778] font-normal text-sm">
            Enter the 6-digit verification code generated by the authenticator
            app.
          </p>

          <div className="w-full flex justify-center items-center my-8">
            <Input.OTP
              // className="w-[400px]"
              variant="filled"
              size={"large"}
              length={6}
              style={{ fontSize: 20 }}
              {...sharedProps}
            />
          </div>
        </div>
        <div className="flex items-center justify-center w-full mt-8">
          <CustomButton
            onClick={() => {
              dispatch(
                openModal({
                  open: true,
                  modalType: modalName.successModal,
                  modalContent: "Authentication added successfully",
                })
              );
            }}
            width="w-[150px]"
            height="h-[40px]"
            title="continue"
            textStyle="uppercase text-white "
            backgrounColor="bg-primary"
          />
        </div>
      </div>
    </CustomModal>
  );
};

export default QrAuthentication;
